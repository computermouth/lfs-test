####  Download the latest MySQL package from MySQl site

url: http://dev.mysql.com/downloads/mysql/
select 64-bit SPACE for Solaris 10

Downloaded the latest version to your local workstation and copy it to the server's global zone. 
For example, upgrading mysql on nyprodi7-z1 will need download the file to nyprodi7.


Login to the global zone of the server with MySQL: for example upgrade mysql on nyprodi7-z1, download to nyprodi7
since the upgrade and MySQL files are located on global zones, so MySQL instance on all individual zone should be upgrade together. 
for example: MySQL instances running on sfqai6-z1, sfqai6-z3 and sfqai7-z1 have files located on sfqai6; therefore all instances should be done when the files on the global zone are upgraded.


Login in sfqai6 as sitemgr
mkdir /export/home/sitemgr/mysql if the directory is not exist.
scp the MySQL installation package files to /export/home/sitemgr/mysql
cd /export/home/sitemgr/mysql
gunzip mysql-5.1.50-solaris10-sparc-64bit.pkg.gz


one each individual zone login as mysql
mkdir /export/home/mysql/scripts/upgrade

Copy backup2upgrade.sh to each individual zone under /export/home/mysql/script/upgrade/backup2.upgrade

#cat backup2upgrade.sh
mysqldump -u $1 -p$2  --routines --single-transaction  --all-databases | gzip -c > mysql-data.sql.gz

chmod 755 backup2upgrade.sh



####  Check the current MySQL installation

pkgchk -l -v mysql
[nyprodi7]:/export/home/sitemgr/mysql$ pkginfo mysql
application mysql MySQL Community Server (GPL)

Copy package admin files to the local directory
#cp /var/sadm/install/admin/default /export/home/sitemgr/mysql


edit mysql

instance=overwrite
basedire=/usr/local




###BACKUP the database  on nyprodi7-z1

mysql> flush tables with read lock;
with the above session active, run mysql dump to backup entire database
./backup2upgrade.sh root xxxx


####Shutdown the mysql instance on nyprodi7-z1
#svcs mysql
online    13:43:59 svc:/application/database/mysql:default
#svcadm disable mysql
#svcs mysql 
disabled       13:43:59 svc:/application/database/mysql:default


####package install
gunzip mysql-5.1.50-solaris10-sparc-64bit.pkg.gz

su - sitesu

pkgadd -a mysql -d mysql-5.1.50-solaris10-sparc-64bit.pkg

The following packages are available:
  1  mysql     MySQL Community Server (GPL)
               (sun4u) 5.1.50

Select package(s) you wish to process (or 'all' to process
all packages). (default: all) [?,??,q]:

Processing package instance <mysql> from </export/home/sitemgr/mysql/mysql-5.1.50-solaris10-sparc-64bit.pkg>
## Installing package <mysql> in global zone

MySQL Community Server (GPL)(sun4u) 5.1.50
Copyright 2000-2008 MySQL AB, 2008 Sun Microsystems, Inc.  All rights reserved.
Use is subject to license terms.
Using </usr/local> as the package base directory.
## Processing package information.
## Processing system information.
   258 package pathnames are already properly installed.
## Verifying disk space requirements.
## Checking for conflicts with packages already installed.
## Checking for setuid/setgid programs.

This package contains scripts which will be executed with super-user
permission during the process of installing this package.

Do you want to continue with the installation of <mysql> [y,n,?]y
Do you want to continue with the installation of <mysql> [y,n,?] y

Installing MySQL Community Server (GPL) as <mysql>

## Installing part 1 of 1.
/usr/local/mysql/COPYING
/usr/local/mysql/EXCEPTIONS-CLIENT
/usr/local/mysql/INSTALL-BINARY
/usr/local/mysql/README
/usr/local/mysql/bin/innochecksum
/usr/local/mysql/bin/msql2mysql
/usr/local/mysql/bin/my_print_defaults
/usr/local/mysql/bin/myisam_ftdump
/usr/local/mysql/bin/myisamchk
/usr/local/mysql/bin/myisamlog
/usr/local/mysql/bin/myisampack
/usr/local/mysql/bin/mysql
/usr/local/mysql/bin/mysql_client_test
/usr/local/mysql/bin/mysql_client_test_embedded
/usr/local/mysql/bin/mysql_config
/usr/local/mysql/bin/mysql_convert_table_format
/usr/local/mysql/bin/mysql_find_rows
/usr/local/mysql/bin/mysql_fix_extensions
/usr/local/mysql/bin/mysql_fix_privilege_tables
/usr/local/mysql/bin/mysql_secure_installation
/usr/local/mysql/bin/mysql_setpermission
/usr/local/mysql/bin/mysql_tzinfo_to_sql
/usr/local/mysql/bin/mysql_upgrade
/usr/local/mysql/bin/mysql_waitpid
/usr/local/mysql/bin/mysql_zap
/usr/local/mysql/bin/mysqlaccess
/usr/local/mysql/bin/mysqlaccess.conf
/usr/local/mysql/bin/mysqladmin
/usr/local/mysql/bin/mysqlbinlog
/usr/local/mysql/bin/mysqlbug
/usr/local/mysql/bin/mysqlcheck
/usr/local/mysql/bin/mysqld
/usr/local/mysql/bin/mysqld-debug
....


/usr/local/mysql/support-files/mysql-log-rotate
/usr/local/mysql/support-files/mysql.server
/usr/local/mysql/support-files/mysql.server.in
/usr/local/mysql/support-files/mysqld_multi.server
/usr/local/mysql/support-files/ndb-config-2-node.ini
[ verifying class <none> ]
## Executing postinstall script.

PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !
To do so, start the server, then issue the following commands:

/usr/local/mysql/bin/mysqladmin -u root password 'new-password'
/usr/local/mysql/bin/mysqladmin -u root -h nyprodi7 password 'new-password'

Alternatively you can run:
/usr/local/mysql/bin/mysql_secure_installation

which will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended for production servers.

See the manual for more instructions.

Please report any problems with the /usr/local/mysql/scripts/mysqlbug script!


Installation of <mysql> was successful.

[nyprodi7]:/export/home/sitemgr/mysql#





####start up the instance on nyprodi7-z1  with skip-network?

$su - sitesu
#svcadm enable mysql
 svcs mysql
STATE          STIME    FMRI
online         13:54:20 svc:/application/database/mysql:default



#### verify the upgrade

#cd /usr/local/mysql/bin
[nyprodi7-z1]:/usr/local/mysql/bin# ./mysql_upgrade -u root -pxxxx


resortprodqasite.webform_roles                     OK
resortprodqasite.webform_submissions               OK
resortprodqasite.webform_submitted_data            OK
resortprodqasite.workflow_node                     OK
resortprodqasite.workflow_node_history             OK
resortprodqasite.workflow_scheduled_transition     OK
resortprodqasite.workflow_states                   OK
resortprodqasite.workflow_transitions              OK
resortprodqasite.workflow_type_map                 OK
resortprodqasite.workflows                         OK
resortprodqasite.wysiwyg                           OK
resortprodqasite.xmlsitemap                        OK
resortprodqasite.xmlsitemap_sitemap                OK
resortprodqasite.zipcodes                          OK
Running 'mysql_fix_privilege_tables'...
OK

restart mysql servers with skip-network comments out

-bash-3.00$ mysql -u root -predhouse
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 58
Server version: 5.1.50-log MySQL Community Server (GPL)

Copyright (c) 2000, 2010, Oracle and/or its affiliates. All rights reserved.
This software comes with ABSOLUTELY NO WARRANTY. This is free software,
and you are welcome to modify and redistribute it under the GPL v2 license

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>



restart mysql 




problem:

mysql_upgrade will update schemas as needed which includes slow_query table. This will cause problem on Mysql replication servers 
which has slow query log enabled.

also 2: You can't use locks with log tables

solution 1:

mysql> set gloval SQL_SLAVE_SKIP_COUNTER=1;
mysql> START SLAVE;

in face, mysql_upgrade should disable binlog before it starts on updaing schema. it has been identified as a bug

http://bugs.mysql.com/bug.php?id=43579

and will be fixed in 5.5



solution 2:

./mysql_upgrade -u root -pxxx --skip-write-binlog